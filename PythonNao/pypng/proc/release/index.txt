Release Procedure
=================

You'll need Docker. And twine.

At top-level...

Edit ``png.py`` for new version number.  Then ``git commit`` this.

Get release notes into ``README.md`` somehow.

Get the latest git change hash::

    git log -n1 | sed q

Set the PYPNG_VERSION variable (extracted from `code/png.py`):

    . ./pypng-version

Add a tag for this release (the tags have this format so that
the automatically generated tarballs from github.com have the
right URL).

    git tag -a pypng-$PYPNG_VERSION -m "PyPNG release $PYPNG_VERSION"

and push:

    git push --tags

Run the shell script that drives Docker:

    sh dock

It's possible at this point that you might want to smoke-test the actual
release binary.  Let's assume that the release binary is good to go.

Move the dist binary that ``sdist`` just created, back into your main
development directory::

    mv dist/pypng-$PYPNG_VERSION.tar.gz ../pypng/dist

Create a zip for the documentation:

    cd html
    zip -r ../pypng-$PYPNG_VERSION-doc.zip .

Login to PyPI and go to "pypng" on the "Your packages" display.  Upload
documentation zip file. (Often doesn't work, because of buggy server.)

Upload to PyPI:

    twine upload dist/*.tar.gz

(If it complains about "you must be identified" then use
"python setup.py register" first)

cd back into your main development directory::

    cd ../pypng

Make a record in ``release/index.txt``
